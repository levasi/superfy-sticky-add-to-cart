{% comment %}
  Sticky Add to Cart Bar Block
  Add this block to your product page template.
  Uses app proxy to fetch dynamic settings from the backend.
{% endcomment %}

{% if template contains 'product' and product %}
  {% assign current_product = product %}
  {% assign current_variant = product.selected_or_first_available_variant %}

  <div class="sticky-add-to-cart-block"
       data-product-id="{{ current_product.id }}"
       data-variant-id="{{ current_variant.id }}"
       style="display: none;">
    
    <div class="sticky-bar-content">
      <!-- Product Image -->
      <div class="sticky-product-image">
        <img src="{{ current_product.featured_image | img_url: '60x60', crop: 'center' }}" 
             alt="{{ current_product.title }}" 
             style="width: 60px; height: 60px; object-fit: cover; border-radius: 8px; border: 1px solid #e1e3e5;">
      </div>
      
      <!-- Product Info -->
      <div class="sticky-product-info" style="flex: 1; min-width: 0;">
        <div class="sticky-product-title" style="font-weight: 600; font-size: 14px; margin-bottom: 2px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">{{ current_product.title }}</div>
        <div class="sticky-product-price" style="font-size: 13px; color: #6d7175;">
          {% if current_variant.compare_at_price > current_variant.price %}
            <span class="sticky-price-compare" style="text-decoration: line-through; margin-right: 8px;">{{ current_variant.compare_at_price | money }}</span>
          {% endif %}
          <span class="sticky-price-current" style="font-weight: 600; color: #141414;">{{ current_variant.price | money }}</span>
        </div>
      </div>
      
      <!-- Quantity Selector -->
      <div class="sticky-quantity-selector" style="display: flex; align-items: center; border: 1px solid #DFDFDF; border-radius: 20px; overflow: hidden; background: #fff; height: 36px; min-width: 120px;">
        <button type="button" class="sticky-quantity-btn" data-action="decrease" style="border: none; background: transparent; padding: 0 16px; cursor: pointer; color: #6d7175; font-size: 16px; font-weight: 600; height: 100%; display: flex; align-items: center; justify-content: center; min-width: 40px; transition: background-color 0.2s;">âˆ’</button>
        <input type="number" class="sticky-quantity-input" value="1" min="1" max="99">
        <button type="button" class="sticky-quantity-btn" data-action="increase" style="border: none; background: transparent; padding: 0 16px; cursor: pointer; color: #6d7175; font-size: 16px; font-weight: 600; height: 100%; display: flex; align-items: center; justify-content: center; min-width: 40px; transition: background-color 0.2s;">+</button>
      </div>
      
      <!-- Add to Cart Button -->
      <button type="button" class="sticky-add-to-cart-btn" style="border-radius: 8px; border: none; cursor: pointer; padding: 10px 16px; font-size: 13px; font-weight: 600; display: flex; align-items: center; gap: 6px; white-space: nowrap;">
        Add to cart
      </button>
    </div>
  </div>

  <!-- Load settings from app proxy -->
  <script src="{{ 'sticky-settings.js' | asset_url }}?v={{ 'now' | date: '%s' }}" defer></script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const productId = {{ current_product.id }};
      const variantId = {{ current_variant.id }};
      const block = document.querySelector('.sticky-add-to-cart-block');
      
      if (!block) {
        console.error('Sticky bar block not found!');
        return;
      }

      // Wait for settings to load from app proxy
      window.StickyBarSettings.onLoad(function(settings) {
        console.log('Settings loaded from app proxy:', settings);
        
        // Show the sticky bar if enabled
        if (window.StickyBarSettings.isEnabled()) {
          block.style.display = 'block';
          window.StickyBarSettings.applySettings();
        }
        
        // Set up quantity selector
        const quantityInput = block.querySelector('.sticky-quantity-input');
        const decreaseBtn = block.querySelector('[data-action="decrease"]');
        const increaseBtn = block.querySelector('[data-action="increase"]');
        
        if (decreaseBtn && increaseBtn && quantityInput) {
          decreaseBtn.addEventListener('click', () => {
            const currentValue = parseInt(quantityInput.value);
            if (currentValue > 1) {
              quantityInput.value = currentValue - 1;
            }
          });
          
          increaseBtn.addEventListener('click', () => {
            const currentValue = parseInt(quantityInput.value);
            if (currentValue < 99) {
              quantityInput.value = currentValue + 1;
            }
          });
        }
        
        // Set up add to cart functionality
        const addToCartBtn = block.querySelector('.sticky-add-to-cart-btn');
        if (addToCartBtn) {
          addToCartBtn.addEventListener('click', function() {
            const quantity = parseInt(quantityInput?.value || 1);
            
            fetch('/cart/add.js', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                id: variantId,
                quantity: quantity
              })
            })
            .then(res => res.json())
            .then(data => {
              console.log('Added to cart:', data);
              
              // Try to open the offcanvas cart if the theme supports it
              if (window.Shopify && window.Shopify.theme && window.Shopify.theme.cart && window.Shopify.theme.cart.open) {
                window.Shopify.theme.cart.open();
              }
              
              // Or trigger a custom event for other themes
              document.dispatchEvent(new CustomEvent('cart:updated', { detail: data }));
              
              // Show success message
              addToCartBtn.textContent = 'Added!';
              setTimeout(() => {
                addToCartBtn.textContent = settings.sticky_button_text || 'Add to cart';
              }, 2000);
            })
            .catch(err => {
              console.error('Could not add to cart:', err);
              alert('Could not add to cart!');
            });
          });
        }
      });
    });
  </script>

  <style>
    .sticky-add-to-cart-block {
      position: fixed;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 9999;
      background: #fff;
      border-top: 1px solid #ddd;
      padding: 16px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      box-shadow: 0 -2px 8px rgba(0,0,0,0.1);
    }
    
    .sticky-bar-content {
      display: flex;
      align-items: center;
      gap: 16px;
      width: 100%;
      max-width: 1200px;
      margin: 0 auto;
    }
    
    .sticky-product-info {
      flex: 1;
    }
    
    .sticky-product-title {
      font-weight: 600;
      margin-bottom: 4px;
    }
    
    .sticky-product-price {
      font-size: 14px;
    }
    
    .sticky-price-compare {
      text-decoration: line-through;
      color: #999;
      margin-right: 8px;
    }
    
    .sticky-quantity-selector {
      display: flex;
      align-items: center;
      border: 1px solid #ddd;
      border-radius: 4px;
    }
    
    .sticky-quantity-btn {
      padding: 8px 12px;
      border: none;
      background: #f5f5f5;
      cursor: pointer;
    }
    
    .sticky-quantity-input {
      width: 50px;
      text-align: center;
      border: none;
      -webkit-appearance: none;
      -moz-appearance: textfield;
      appearance: textfield;
    }
    input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type=number] {
  -moz-appearance: textfield;
}
    .sticky-add-to-cart-btn {
      padding: 12px 24px;
      background: #008060;
      color: #fff;
      border: none;
      border-radius: 4px;
      font-weight: 600;
      cursor: pointer;
      white-space: nowrap;
    }
    
    .sticky-add-to-cart-btn:hover {
      background: #006b4f;
    }
    
    @media (max-width: 768px) {
      .sticky-bar-content {
        flex-direction: column;
        gap: 12px;
      }
      
      .sticky-add-to-cart-block {
        padding: 12px;
      }
    }
  </style>
{% endif %}
{% schema %}
{
  "name": "Sticky Add to Cart Bar",
  "target": "section",
  "settings": [
    {
      "type": "color",
      "id": "bar_color",
      "label": "Bar background color",
      "default": "#f1f1f1"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    }
  ]
}
{% endschema %}