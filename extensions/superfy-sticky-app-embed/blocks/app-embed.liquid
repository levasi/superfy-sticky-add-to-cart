{% comment %}
  Sticky Add to Cart App Embed
  This will appear in the Apps tab of the theme customizer
{% endcomment %}

{% comment %} Get trigger settings from metafields {% endcomment %}
{% assign sticky_trigger_seconds = shop.metafields.superfy_sticky.sticky_trigger_seconds | default: '3' %}
{% assign sticky_trigger_pixels = shop.metafields.superfy_sticky.sticky_trigger_pixels | default: '300' %}

{% if template contains 'product' and product %}
  {% assign current_product = product %}
  {% assign current_variant = product.selected_or_first_available_variant %}

  <div class="sfy-sb sticky-add-to-cart-block"
       data-product-id="{{ current_product.id }}"
       data-variant-id="{{ current_variant.id }}"
       style="display: none;">
    <div class="sfy-sb-container">
      <div class="sfy-sb-content">
        <div class="sfy-sb-image --sfy-medium">
          <img src="{{ current_product.featured_image | image_url: width: 60, height: 60, crop: 'center' }}" 
               alt="{{ current_product.title }}"
               width="60"
               height="60" />
        </div>
        <div class="sfy-sb-details">
          <div class="sfy-sb-name">
            <h2>{{ current_product.title }}</h2>
          </div>
          <div class="sfy-sb-price">
            {% if current_variant.compare_at_price > current_variant.price %}
              <span class="price-compare" style="text-decoration: line-through; margin-right: 8px;">{{ current_variant.compare_at_price | money }}</span>
            {% endif %}
            <span class="price">{{ current_variant.price | money }}</span>
          </div>
        </div>
        <div class="sfy-sb-qty">
          <button class="sfy-sb-qty-btn sfy-sb-qty-minus" type="button" aria-label="Decrease quantity">
            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M5 12H19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
          <input type="number" 
                 class="sfy-sb-qty-input" 
                 value="1" 
                 min="1" 
                 max="99"
                 aria-label="Quantity">
          <button class="sfy-sb-qty-btn sfy-sb-qty-plus" type="button" aria-label="Increase quantity">
            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M12 5V19M5 12H19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
        </div>
        <div class="sfy-sb-actions">
          <button class="sfy-sb-add-to-cart-button" type="button">
            <span class="sfy-sb-add-to-cart-text">
              <span class="sfy-sb-add-to-cart-text__content">Add to cart</span>
            </span>
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Embedded Settings (using app proxy) -->
  <script>
    // Fetch settings dynamically from app proxy
    async function loadEmbeddedSettings() {
      try {
        console.log('ðŸ”§ Attempting to fetch settings from app proxy...');
        const response = await fetch('/apps/proxy/settings?t=' + Date.now());
        console.log('ðŸ”§ App proxy response status:', response.status);
        
        if (response.ok) {
          const data = await response.json();
          console.log('ðŸ”§ Fetched settings from app proxy:', data);
          console.log('ðŸ”§ Trigger seconds from app proxy:', data.sticky_trigger_seconds);
          return data;
        } else {
          console.error('ðŸ”§ App proxy failed with status:', response.status);
          const errorText = await response.text();
          console.error('ðŸ”§ App proxy error response:', errorText);
        }
      } catch (error) {
        console.error('ðŸ”§ Error fetching settings:', error);
      }
      
      // Fallback to default settings
      return {
        sticky_bar_color: '#fff',
        sticky_visibility: 'all',
        sticky_trigger: 'after-x-seconds',
        sticky_trigger_seconds: '0',
        sticky_trigger_pixels: '300',
        sticky_content_display_image: true,
        sticky_content_display_title: true,
        sticky_content_display_price: true,
        sticky_content_display_quantity: true,
        sticky_content_display_mobile_image: true,
        sticky_content_display_mobile_title: true,
        sticky_content_display_mobile_price: true,
        sticky_content_display_mobile_quantity: true,
        sticky_bar_width: 'contained',
        sticky_bar_width_mobile: 'full',
        sticky_max_width_mobile: '',
        sticky_max_width_mobile_unit: 'px',
        sticky_alignment_mobile: 'right',
        sticky_outer_spacing_mobile: '',
        sticky_outer_spacing_mobile_unit: 'px',
        sticky_inner_spacing_mobile: '16',
        sticky_max_width: '',
        sticky_max_width_unit: 'px',
        sticky_alignment: 'left',
        sticky_outer_spacing: '',
        sticky_outer_spacing_unit: 'px',
        sticky_inner_spacing: '16',
        sticky_inner_spacing_unit: 'px',
        sticky_background_color: '#FFFFFF',
        sticky_border_color: '#000000',
        sticky_border_radius: '12',
        sticky_product_name_color: '#141414',
        sticky_image_size: 'medium',
        sticky_image_size_mobile: 'medium',
        sticky_quantity_color: '#141414',
        sticky_quantity_border_color: '#DFDFDF',
        sticky_button_behavior: 'add',
        sticky_button_text: 'Add to cart',
        sticky_enable_cart_icon: true,
        sticky_enable_mobile_cart_icon: true,
        sticky_button_text_color: '#FFFFFF',
        sticky_button_bg_color: '#141414',
        sticky_custom_css: '',
        _timestamp: new Date().toISOString(),
        _embedded: true
      };
    }

    // Load settings and set them globally
    loadEmbeddedSettings().then(settings => {
      window.StickyBarEmbeddedSettings = settings;
      console.log('ðŸ”§ Using dynamic embedded settings:', window.StickyBarEmbeddedSettings);
    });
  </script>

  <!-- Load CSS -->
  {{ 'sticky-bar.css' | asset_url | stylesheet_tag }}

  <!-- Load JavaScript -->
  <script src="{{ 'sticky-settings.js' | asset_url }}" defer></script>

  <script>
    // Initialize sticky bar when DOM is ready
    document.addEventListener('DOMContentLoaded', function() {
      // Wait a bit for the settings to load
      setTimeout(function() {
        if (window.StickyBarSettings) {
          window.StickyBarSettings.load().then(function() {
            window.StickyBarSettings.applySettings();
          });
        }
      }, 100);
    });
  </script>
{% endif %}

{% schema %}
{
  "name": "Sticky Add to Cart",
  "target": "body",
  "settings": [
    {
      "type": "header",
      "content": "Sticky Add to Cart Bar"
    },
    {
      "type": "paragraph",
      "content": "This app embed will show a sticky add to cart bar on product pages. Configure the appearance and behavior in the app settings."
    }
  ]
}
{% endschema %}